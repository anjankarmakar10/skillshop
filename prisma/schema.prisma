// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model JobPost {
  id               String     @id @default(auto()) @map("_id") @db.ObjectId
  title            String
  companyName      String
  location         String
  applyUrl         String
  salary           Int
  shortDescription String
  description      String
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  type             Type       @default(FULL_TIME)
  experience       Experience @default(MID_LEVEL)
  userEmail        String?
}

model Favorite {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  jobId     String @db.ObjectId
  userEmail String
}

enum Type {
  FULL_TIME
  PART_TIME
  INTERNSHIP
}

enum Experience {
  JUNIOR
  MID_LEVEL
  SENIOR
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
